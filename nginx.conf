user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}

stream {
    map $ssl_preread_server_name $backend {
        www.example.jp website; # 填写自己的网站服务器
        MyDomain.com naiveproxy; # 填写caddy2中设置的域名
    }

    upstream website {
        server 127.0.0.1:8443;
    }

    upstream naiveproxy {
        server 127.0.0.1:7443;
    }

    server {
        listen 443 reuseport;
        listen [::]:443 reuseport;
        ssl_preread on;
        proxy_protocol on;
        proxy_pass $backend;
    }
}

http {

        sendfile on;
        tcp_nopush on;
        types_hash_max_size 2048;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ssl_protocols TLSv1.2 TLSv1.3; 
        ssl_prefer_server_ciphers on;

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        gzip on;

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;

server { # 正常的网站服务器http，根据需求改写
        listen 80;
        listen [::]:80;
        server_name www.example.jp;
        location /.well-known/ {
            root /var/www/html;
         }
        if ($ssl_protocol = "") {
                return 301 https://$host$request_uri;
        }
}
server {  # 正常的网站服务器https，根据需求改写
    listen 127.0.0.1:5443 ssl http2 proxy_protocol;
    set_real_ip_from 127.0.0.1;
    real_ip_header proxy_protocol;
    server_name example.eu.org;
    client_max_body_size 10240m;
    ssl_certificate /path/server.crt;
    ssl_certificate_key /path/server.key;
    ssl_protocols         TLSv1.2 TLSv1.3;
    ssl_ciphers  ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
   location / {
        proxy_pass http://x.x.x.x:8080; # 反代服务端口
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        client_max_body_size 10240M;
    }
}
}